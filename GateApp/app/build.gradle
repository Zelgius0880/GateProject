import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id ("com.android.application")
    id ("kotlin-android")
    id("kotlin-kapt")
    id("de.mannodermaus.android-junit5")
    id("com.google.firebase.crashlytics")
    id("com.google.gms.google-services")
    id("dagger.hilt.android.plugin")
}
apply plugin: 'kotlin-android'

android {
    compileSdk 34
    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }
    defaultConfig {
        testInstrumentationRunnerArguments runnerBuilder: 'de.mannodermaus.junit5.AndroidJUnit5Builder'
        applicationId ("com.zelgius.gateApp")
        minSdkVersion (24)
        targetSdkVersion (34)
        versionCode (7)
        versionName = "2.2.0"

        //testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        // 2) Connect JUnit 5 to the runner
        signingConfig signingConfigs.debug
    }

    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        
        debug {
            buildConfigField("String", "AP_SSID", properties.getProperty("esp8266.ap.ssid") )
            buildConfigField("String", "AP_PASSWORD", properties.getProperty("esp8266.ap.password") )
            applicationIdSuffix = ".debug"
        }

        release {
            minifyEnabled = false
            proguardFiles (getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")

            buildConfigField("String", "AP_SSID", properties.getProperty("esp8266.ap.ssid") )
            buildConfigField("String", "AP_PASSWORD", properties.getProperty("esp8266.ap.password") )
        }

    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        //useIR = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.8"
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module']
        }
    }


    testOptions {
        // 5) Configure JUnit 5, if necessary
        junitPlatform {
            // Configuration goes here!
        }
    }
    buildToolsVersion = '30.0.3'
    namespace 'com.zelgius.gateApp'
}
// For Kotlin
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

sourceSets {
    configureEach {
        languageSettings {
            optIn('org.mylibrary.OptInAnnotation')
        }
    }
}
dependencies {

    implementation ("androidx.core:core-ktx:1.10.1")
    implementation ("androidx.appcompat:appcompat:1.6.1")
    implementation ("androidx.activity:activity-ktx:1.7.2")
    implementation ("androidx.fragment:fragment-ktx:1.6.0")
    implementation ("com.google.android.material:material:1.9.0")
    androidTestImplementation ("androidx.test.ext:junit:1.1.5")
    androidTestImplementation ("androidx.test.espresso:espresso-core:3.5.1")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.2.2")

    // Test
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.1")

    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.9.1")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-params:5.9.1")
    androidTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.1")
    androidTestImplementation('de.mannodermaus.junit5:android-test-core:1.2.2')
    androidTestRuntimeOnly('de.mannodermaus.junit5:android-test-runner:1.2.2')

    androidTestImplementation("androidx.test:runner:1.5.2")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
    androidTestImplementation ("androidx.arch.core:core-testing:2.2.0")
    androidTestImplementation ("androidx.test:rules:1.5.0")


    //HILT
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    //KTX
    implementation ("androidx.lifecycle:lifecycle-runtime-ktx:2.6.1")
    implementation ("androidx.lifecycle:lifecycle-livedata-ktx:2.6.1")
    
    
    //COMPOSE
    def composeVersion = "1.4.3"
    implementation ("androidx.compose.ui:ui:$composeVersion")
    // Tooling support (Previews, etc.)
    implementation( "androidx.compose.ui:ui-tooling:$composeVersion")
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation ("androidx.compose.foundation:foundation:$composeVersion")
    // Material Design
    implementation ("androidx.compose.material:material:$composeVersion")
    // Material design icons
    implementation ("androidx.compose.material:material-icons-core:$composeVersion")
    implementation ("androidx.compose.material:material-icons-extended:$composeVersion")
    // Integration with activities
    implementation ("androidx.activity:activity-compose:1.7.2")
    // Integration with ViewModels
    implementation ("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"

    //Firebase
    implementation ("com.google.firebase:firebase-firestore-ktx:24.7.0")
    implementation ("com.google.firebase:firebase-auth:22.1.0")
    implementation (platform("com.google.firebase:firebase-bom:28.0.1"))
    implementation ("com.google.firebase:firebase-crashlytics")
    implementation "androidx.core:core-ktx:+"

    implementation 'ca.rmen:lib-sunrise-sunset:1.1.1'
}
repositories {
    mavenCentral()
}